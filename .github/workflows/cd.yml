name: candy-fight api - cd

on:
  workflow_run:
    workflows: ["candy-fight api - ci"]
    branches: [main]
    types:
      - completed

jobs:
  build:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.github_tag.outputs.new_tag }}

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: setup Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: login to Github Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: generate swagger docs
        run: |
          export PATH=$PATH:`go env GOPATH`/bin
          go get -u github.com/swaggo/swag/cmd/swag
          swag init --parseDependency

      - name: bump version and push tag
        uses: mathieudutour/github-tag-action@v4.6
        id: github_tag
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: build and push image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ghcr.io/jdr-ynovant/candy-fight-api:latest
            ghcr.io/jdr-ynovant/candy-fight-api:${{ steps.github_tag.outputs.new_tag }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  rollout:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: rollout new version
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.GHCR_TOKEN }}
          repository: JDR-ynovant/system
          event-type: rollout
          client-payload: '{"tag": "${{ needs.build.outputs.new_tag }}", "service": "api"}'
